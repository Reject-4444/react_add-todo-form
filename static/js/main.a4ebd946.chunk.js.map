{"version":3,"sources":["api/todos.ts","api/users.ts","services.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/UserInfo/UserInfo.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","generateId","todoss","arrWithId","forEach","todo","push","Math","max","TodoInfo","user","users","find","el","className","classNames","href","TodoList","todos","map","UserInfo","value","App","useState","todosFromServer","setTodos","setTitle","hasTitleError","setHasTitleError","setUser","hasUserError","setHasUserError","action","method","onSubmit","e","preventDefault","currentTodos","type","onChange","target","placeholder","usersFromServer","userFS","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4ebd946.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nexport const findUser = (id: number, arr: User[]): User | undefined => {\n  const result = arr.find(el => el.id === id);\n\n  return result;\n};\n\nexport const generateId = (todoss: Todo[]): number => {\n  const arrWithId: Array<number> = [];\n\n  todoss.forEach(todo => arrWithId.push(+todo.id));\n\n  return Math.max(...arrWithId) + 1;\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport users from '../../api/users';\nimport { findUser } from '../../services';\n\ntype Props = { todo: Todo };\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const user = findUser(todo.id, users);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n        {user?.name}\n      </a>\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = { todos: Todo[] };\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          key={todo.id}\n          data-id={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import { FC } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  return <option value={user.id}>{user.name}</option>;\n};\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { UserInfo } from './components/UserInfo';\nimport { generateId } from './services';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [user, setUser] = useState(0);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const addOne = (todo: Todo) => {\n    setTodos((currentTodos) => [...currentTodos, todo]);\n  };\n\n  const handleSumbit = (e: FormEvent) => {\n    e.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserError(!user);\n\n    if (title && user) {\n      addOne({\n        title,\n        userId: generateId(todos),\n        id: user,\n        completed: false,\n      });\n      setTitle('');\n      setUser(0);\n    }\n  };\n\n  const handleTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUser = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUser(+e.target.value);\n    setHasUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSumbit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitle}\n            placeholder=\"Enter a title\"\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={handleUser}\n          >\n            <option value=\"0\">\n              Choose a user\n            </option>\n            {usersFromServer.map(userFS => (\n              <UserInfo user={userFS} />\n            ))}\n          </select>\n          {hasUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}