{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","services.ts","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","className","href","TodoInfo","todo","users","find","el","classNames","TodoList","todos","map","App","useState","todosFromServer","setTodos","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserError","setHasUserError","action","method","onSubmit","e","todoss","preventDefault","trim","Math","max","currentTodos","type","value","onChange","target","placeholder","usersFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ed83c4a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport users from '../../api/users';\nimport { findUser } from '../../services';\n\ntype Props = { todo: Todo };\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const user = findUser(todo.userId, users);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nexport const findUser = (id: number, arr: User[]): User | undefined => {\n  const result = arr.find(el => el.id === id);\n\n  return result;\n};\n\nexport const generateId = (todoss: Todo[]): number => {\n  return Math.max(...todoss.map(todo => +todo.id)) + 1;\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = { todos: Todo[] };\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          key={todo.id}\n          data-id={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport { FormEvent, useState } from 'react';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\nimport { generateId } from './services';\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosFromServer);\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const addOne = (todo: Todo) => {\n    setTodos((currentTodos) => [...currentTodos, todo]);\n  };\n\n  const handleSumbit = (e: FormEvent) => {\n    e.preventDefault();\n\n    setHasTitleError(!title.trim());\n    setHasUserError(!userId);\n\n    if (title.trim() && userId) {\n      addOne({\n        title,\n        userId,\n        id: generateId(todos),\n        completed: false,\n      });\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  const handleTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUser = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setHasUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSumbit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitle}\n            placeholder=\"Enter a title\"\n          />\n          {hasTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select data-cy=\"userSelect\" value={userId} onChange={handleUser}>\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n          {hasUserError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}